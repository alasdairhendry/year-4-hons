/*
Quest Machine Release Notes

Version 1.2.3:
[November 23, 2019]
- Added: JSON export/import in Quest Editor.
- Improved: Quest content, conditions, and action submenus now trim "Quest Content" from menu items for cleaner menus.
- Improved: Exposed UIPanel.deactivateOnHidden property.
- Fixed: When counter name used text table, name was not shown in counter list.
- Save System: Scene Portal now prevents multiple triggerings if interacting GameObject has multiple colliders.
- Dialogue System: Moved integration folder into Plugins/Pixel Crushers/Quest Machine/Third Party Support.
- Inventory Pro: Added support for procedurally-generated fetch item quests.
- ORK: Updated for 2.27.0.


Version 1.2.2:
[October 23, 2019]
- Changed: Reverted QuestMachineConfiguration execution order to default value.
- Added: Method to start dialogue with a specific quest.
- Improved: Alert UI now has Leave Last Content Visible While Hiding checkbox.
- Improved: Alert UI ensures Main Panel is active whenever showing an alert.
- Improved: Dialogue "Greet" message sent before cataloguing quests in case message changes a quest state.
- Fixed: Typo in QuestMachine.GetQuestInstance() that used quest ID instead of quester ID to look for quest journal.
- Fixed: Setting localized language back to blank string now sets it to the default language.
- Emerald AI: Updated for Emerald AI 2.3.0.2.
- uMMORPG: Fixed Add/Remove Item action. Updated for uMMORPG 1.179.
- uSurvival: Updated for uSurvival 1.67.


Version 1.2.1:
[September 21, 2019]
- Fixed: Activate GameObject Quest Action (was broken in version 1.2.0).
- Fixed: IdentifiableQuestListContainer did not automatically find QuestEntity if present.
- Fixed: Node borders were not appearing in Unity 2019.3 when unselected.
- Improved: Entities now inherit drive values and urgency functions from parents.
- Improved: QuestGeneratorEntity now chooses from weighted random selection of top urgent facts instead of single most urgent fact.
- Improved: QuestGeneratorEntity does not generate a quest if there are no urgent facts.


Version 1.2.0:
[August 21, 2019]
- CHANGED: Minimum version is now Unity 2017.4.1f1.
- Improved: Set GameObject Active quest action can now activate GameObjects even if root parent is inactive.
- Improved: UIPanel.OnHidden method is now virtual.
- Improved: Menu item to set USE_PHYSICS2D now applies to all build targets, not just current.
- Fixed: Text of procedurally generated quests showed total count of target entities in domain instead of count required for quest.
- Save System: DiskSavedGameDataStorer methods are now virtual.
- Save System: DiskSavedGameDataStorer WebGL build error message.
- Save System: Bug in Position Saver with Multiscene ticked.
- Inventory Engine: Optimized item lookups.
- Inventory Pro: Fixed Add Item quest action; specify negative amount to remove items.
- uMMORPG: Added XP and gold reward systems; if NPC has QuestGeneratorEntity, uses its StartDialogue instead of QuestGiver component.


Version 1.1.12:
[July 25, 2019]
- Fixed: {QUESTER} tag using QuestMachineID incorrectly returned ID instead of Display Name.
- Improved: Added quest.greeterID / {GREETERID} when talking to quest giver.
- Improved: Text table editor allows big entry area to appear along with search panel; remembers search panel settings.
- Dialogue System: Removed unnecessary warning message.
- Save System: In WebGL, Disk Saved Game Data Storer custom editor reports unavailable instead of error.


Version 1.1.11:
[July 23, 2019]
- Added: Quest option 'No Repeat If Successful'.
- Improved: Disappear Event's onDisappeared event is now public.
- Improved: QuestMachine.GetQuestInstance now searches quest journals before other quest containers.
- Fixed: SetQuestStateQuestAction/SetQuestNodeStateQuestAction no longer change state if state is already at specified value.
- Dialogue System: Misc. fixes to getting and setting quest states in conversations.


Version 1.1.10:
[July 1, 2019]
- Text Tables: Improved performance in very large tables; added PlayMaker actions; GetFieldText() replaces "\n" with newlines.
- Save System: DiskSavedGameDataStorer inspector now has button to delete saved games; SaveSystemTestMenu is now reskinnable.
- Invector: Added utility script &  example to connect journal UI to Invector's inventory UI; removed "Add shotgun" action from example's Start node; added UpdateQuestUIsOnStart component.
- uMMORPG: Now saves quest givers' states.


Version 1.1.9:
[June 8, 2019]
- Fixed: Inspector headings in 2019.1.
- Fixed: Input Device Manager System.IndexOutOfRangeException when first importing asset if project's Input Manager is not ready.
- Save System:
	- Improved: Added SaveSystem methods LoadAdditiveScene, UnloadAdditiveScene.
	- Improved: Savers can now implement optional ApplyDataImmediate and OnRestartGame methods.
	- Fixed: Moved DiskSavedGameDataStorer initialization code from Start to Awake so other scripts can check for saved games in their own Start methods.
- Dialogue System: 
	- Fixed: In Pesky Rabbits demo conversation, QuestID was incorrectly set to harvestCarrots instead of peskyRabbits.
	- Added QuestBuilderWithDialogueSystem class which adds methods to add conversation content and DS markup text content.
- Invector: Fixed auto equip issue when loading saved games or changing scenes.
- uMMORPG: Fixed bug in removing items in Add/Remove Item quest action.


Version 1.1.8:
[May 17, 2019]
- Added: Quest Journal checkbox Only Track One Quest At A Time.
- Improved: QuestBuilder class can now work with an existing quest object.
- Fixed: Bug in add node wizards that made node's Internal Name uneditable.
- Text Tables:
	- Added right-click context menu to insert/delete fields.
	- CSV import retains in order from file, now handles blank lines gracefully.
	- Editor window remembers last tab.
- Save System: Eliminated message on Destructible Saver about missing Save System when exiting playmode.
- Adventure Creator: Updated for AC 1.67.
- Dialogue System: 
	- Added: Add Lua function to set Quest Machine indicator states.
	- Improved: Conversation Quest Action first tries to find actor by Quest Machine ID. Then checks Dialogue Actor component and GameObject name.
- Invector: Updated for latest versions.
- Love/Hate: Added LoveHate Traits To Drives component.


Version 1.1.7:
[April 14, 2019]
- Added: QuestMachineID component to assign IDs to GameObjects other than QuestEntity, QuestGiver, and QuestJournal.
- Improved: Group buttons are now supported for quest reward selection.
- Improved: Generated quests turn-in dialogue show rewards that player receives.
- Fixed: When completing quest and only one quest left on giver, back button closed instead of going back.
- Dialogue System: Fixed string comparison bug in Lua Variable Quest Condition.
- uSurvival: Updated for version 1.43; added ServerSpawner.


Version 1.1.6:
[March 31, 2019]
- Fixed: Custom reward systems using older 2-parameter signature were not working.
- Improved: Quest journal UI now uses quest journal's image, optionally display name.
- Text Tables:
	- Fixed: Adding new field showed blank line until refresh.
	- Added: Sort & search features.
- Save System: Added Restore State On Start checkbox to savers; Added DeleteSavedGameInSlot method to SaveSystemMethods.
- ORK Framework: Updated reward systems.
- uMMORPG: Updated for version 1.165.


Version 1.1.5:
[March 18, 2019]
- CHANGED: The format of save data for hand-written quests changed; one byte was added to record HUD track status; not compatible with older saved game files.
- Added Quest Editor Wizards: Message Requirement, Counter Condition Requirement, Return to QuestGiver.
- QuestEntity.id now correctly returns ID, not display name.
- Spawner now observes random selection weights for prefabs.
- Isolated Spawner's instantiate and destroy methods to more easily override.
- QuestGeneratorEntity can now specify order in which to apply reward systems.
- Reward systems now support probability.
- Reward systems can now access reward multipliers defined on entity types.
- Quest generator Action > Required Value is now used as minimum value.
- Text Table: Performance improvement when editing large tables.
- UI: Panels remember last selection instead of reverting to first selectable. Added UIPanel.monitorSelection bool to temporarily disable this functionality.
- Save System:
	- Position Saver now updates NavMeshAgent if present.
	- Assign Unique Keys menu item now also disambiguates existing duplicates.
	- Fixed error message "Some objects were not cleaned up" when stopping playmode when Save System doesn't have data serializer or data storer.
- Compass Navigator Pro: Updated for version 4.3.2.
- Dialogue System: 
	- When starting a conversation, Lua variables QUESTGIVER/ID, QUESTER/ID, QUESTID are now set.
	- BarkQuestAction > String can now play a sequence.
- Opsive Character Controllers: Updated support for version 2.1.1; fixed bugs in saving inventory & attributes.
- ORK Framework: Updated support for version 2.23.0.
- Emerald AI: Updated support for version 2.2.
- uMMORPG: Updated for version 1.162.
- uSurvival: Updated for version 1.140.


Version 1.1.4:
[February 10, 2019]
- Changed: Shortened folder names.
- Added: InputDeviceMethods utility component to access InputDeviceManager in inspector.
- Fixed: QuestListContainer more gracefully handles loading of invalid save data (e.g., if quest changed since save).
- Fixed: MessageSystem no longer throws error if sending message from object that's being destroyed.
- Fixed: RuntimeTypeUtility API change to address iOS issue.
- Dialogue System: Added Bark Quest Action.


Version 1.1.3:
[January 29, 2019]
- Changed: When quest becomes successful|failed|abandoned, it sets any active nodes inactive.
- Updated assembly definition files to include Wrappers; renamed Common to PixelCrushers.
- Added: Quest Editor has now Arrange Nodes feature.
- Added: Quest Editor gear menu now shows quest list for easier quest switching.
- Added: Quest Editor gear menu can now move all loose text to a Text Table asset.
- Improved: QuestGiver.StartDialogueWithPlayer() finds GameObject with QuestJournal if multiple GameObjects are tagged Player.
- Improved: New quest counters' max value now initialized to 999; shows warning if min & max values are invalid.
- Improved: Editors now handle issues with outdated third party assemblies more gracefully.
- Improved: Can now assign requirement function assets to procedural quest generator action assets.
- Improved: Can now drag scene object into Instantiate Prefab Quest Action's Location field.
- Improved: QuestSubasset.quest and questNode properties are now public.
- Improved: Moved UI art assets used by Quest Machine prefab from Demo folder to Prefabs folder.
- Fixed: QuestCondition.SetTrue() now calls StopChecking().
- Fixed: MessageSystem bug when removing listeners while sending a message.
- Fixed: UIPanel timing bug when animations cause outgoing panel to overlap incoming panel.
- Fixed: When parent node becomes true, it only sets child nodes active if the quest is still active.
- Fixed: Can no longer parent a node to itself in Quest Editor.
- Save System: Calling LoadGame() w/Save System > Save Current Scene unticked now also updates internal saved game cache.
- Save System: ScenePortal.UsePortal() is now virtual.
- TextTable: Large text areas now word wrapped.
- Articy: Improvements to importing quests; nodes are auto-arranged; input pins are new imported as condition quest nodes; when creating templates, folders are created if they don't exist.
- Dialogue System: Can now show other text (e.g., "no quests") as conversation; added PlaySequenceQuestAction; bridge now forwards UpdateTracker messages to Quest Machine UIs.
- Opsive Character Controllers: Added support.
- ORK Framework: Updated for 2.21.0.
- uMMORPG: Updated for 1.155.
- uSurvival: Updated for 1.34.


Version 1.1.2:
[December 16, 2018]
- CHANGED: FactionUrgencyFunction now returns positive affinity, not negative.
- Improved: Quest Editor now shows current quest state at runtime.
- Improved: Quest Editor window gracefully handles if editor resources files are missing.
- Added: Message System Logger component to log Message System activity only for specific GameObjects.
- articy:draft: Fixed import of Conditions.
- Dialogue System: Fixed Text Tables tags now usable in conversations.
- Dialogue System: Added DialogueSystemTextQuestContent to use markup tags in Quest Machine UIs.
- ORK Framework: Updated support for ORK 2.2.0.
- Rucksack: Added support.
- uSurvival: Item count condition can now be AtLeast or AtMost.


Version 1.1.1:
[December 2, 2018]
- Fixed: UI animation monitor no longer reports error if animator is destroyed while waiting.
- uMMORPG: Updated for uMMORPG 1.148.


Version 1.1.0:
[November 26, 2018]
- Added: Drive alignment urgency function.
- Improved: Generated quest actions can now send messages when active and completed.
- Fixed: Generated actions with effects that modeled the player's inventory domain weren't being chosen.
- Fixed bug generating actions that manipulate the generator's world model of the player's inventory.
- Fixed: Added EntityType Images section to quest database assets to specify images used in procedural quests.
- Fixed: QuestGeneratorEntity now disallows parallel processes for same entity to prevent duplicate quests.


Version 1.0.9:
[November 10, 2018]
- CHANGED: Quests now also activate counter listeners if state is WaitingToStart and has autostart or offer conditions.
- Improved: Added cooldown update frequency to Quest Giver to automatically update quest cooldowns & quest indicators.
- Improved: UI panel show/hide animations can now use Animation component as well as Animator.
- Fixed: Float conversion in .NET4 is now culture invariant.
- Fixed: Can no longer delete Start node.
- Compass Navigator Pro: Updated support package.
- Emerald AI: Updated EmeraldAISaver to properly play dead state.
- Invector character controllers: Added support.


Version 1.0.8:
[October 26, 2018]
- CHANGED: If using Physics2D in Unity 2018+, you must set scripting define symbol USE_PHYSICS2D.
- Added: QuestGeneratorEntity.StartDialogue methods that generate quest first if necessary.
- Added: Can now adjust drive values at runtime.
- Added: Quest Journal UI options to always expand groups, show details when hovering on quest name.
- Added: Quest Journal UI quest name can now show quest's icon.
- Added: EntityType Saver.
- Fixed: Removed null reference error an urgency function is unassigned.
- Fixed: Trigger Event and Collision Event components now handle >32 tags.
- Fixed: Quest Journal > UI Settings > Journal UI incorrectly accepted Dialogue UI type.
- Improved: Editor windows now gracefully ignore unreadable third party DLLs.
- Improved: Added Assign Unique Key menu item for Saver components.
- Improved: Animator Saver now saves parameter values.
- articy:draft: 
	- Articy condition nodes correctly link to true and false result nodes.
	- Links to the same node now actually link to the same node instead of duplicates of the node.
- Dialogue System for Unity: 
	- Fixed: Now only replaces tags if Process QM Tags is ticked.
	- Fixed: GiveQuest() Lua function finds Quest Journal even if ID is blank.
    - Fixed: Now shows regular Quest Machine UI if content has no Dialogue System Conversation content.
- ORK Framework: Fixed bug in GetQuestNodeStateStep.
- Inventory Engine: Added integration.
- uSurvival: Added integration.


Version 1.0.7:
- Improved: When quest giver has multiple quests, can now navigate back to quest list in same dialogue to view other quests.
- Added: Animator Quest Action.
- Added: Animator Saver.
- Fixed: Removed editor warning in EditorNote.cs.


Version 1.0.6:
- Fixed: Quest generators now comply with max quest limit even if multiple GenerateQuest() processes start simultaneously.
- Fixed: QuestMachine.instance wasn't being assigned properly.
- Fixed: MessageArgsEvent is now serializable in inspector.
- Save System: Added Binary Data Serializer.
- Save System: Added saveStarted, saveEnded, loadStarted, loadEnded events; SaveSystemEvents component.
- Save System: Fixed index error in DiskSavedGameDataStorer.
- Dialogue System: Now allows mix-and-match quests that use Dialogue System conversations and quests that don't.
- uMMORPG: Added conditions & actions.
- Added unitypackage containing optional Assembly Definition files.


Version 1.0.5:
- Improved: Now tracks times accepted on quester, not quest giver, to better support multiplayer.
- Added: QuestGiver & QuestListContainer.ResetToOriginalState() methods.
- Fixed: QuestStateSerializer now gracefully handles bad tag lists.
- articy:draft: Added support.
- Dialogue System for Unity: Updated for Dialogue System for Unity 2.x.
- Inventory Pro: Added support.
- uMMORPG: Added support.


Version 1.0.4:
- Improved: Save System now uses nonallocating (no GC) methods when loading.
- Fixed: Quests that listen for messages now accept any message parameter when parameter conditions is blank.
- Fixed: Button content appeared as icon content.
- Emerald AI: Added support.
- ORK Framework: Added support.


Version 1.0.3:
- Added: Compass Navigator Pro support.
- Fixed: Setting node from active to inactive to active didn't restart condition checking.
- Fixed: Node deletion didn't delete subassets. Opening quest in editor window will clean up unused subassets. Also added gear menu Debug > Delete Unused Subassets.


Version 1.0.2:
- Updated for Unity 2017.3 support.
- Changed: (PlayMaker) Actions that used FsmGameObject now use FsmOwnerDefault; will need to be reassigned.
- Changed: QuestGeneratorEntity Dialogue For Rewards format changed.
- Added: Step-by-step quest generator tutorial to manual.
- Added: QuestMachine.GetQuestCounter method.
- Added: QuestControl.SendToMessageSystem and Message Events format Message:Param:[Value] to pass values.
- Added: QuestGiver.StartDialogueWithPlayer; QuestGiver.StartDialogue now also finds player by tag if no player is specified.
- Added: QuestGiver.GiveQuestToQuester and GiveAllQuestsToQuester methods.
- Improved: Quest generator can now choose smaller target amounts than the total number of targets known.
- Fixed: Counter conditions now also check counter's value as soon as condition becomes active, not just when counter value changes.
- Fixed: Counter condition to check that value is less than goal wasn't registering true.
- Fixed: Spawner didn't stop spawning at max count.
- Fixed: Abandoned repeatable quests weren't able to be picked up again.
- Fixed: Tags for min & max counter values & reference window.
- Fixed: Alert UI and HUD no longer steal Unity UI focus.
- Fixed: UIPanel.OnVisible now gracefully handles missing EventSystem.
- Fixed: Loading a saved game no longer re-executes quests' main actions.
- Fixed: Journal no longer shows quests whose state is WaitingToStart.
- Fixed: NPCs no longer offer a generated quest if the player already has a generated quest for the same action and target.
- Fixed: Demo player is now tagged Player.
- Improved: SaveSystem can specify frames to wait before applying saved data.
- Improved: SaveSystem can encrypt saved games in PlayerPrefs.
- Fixed: TextTable editor now updates dropdown in Fields section properly when renaming a language.
- Added: Dialogue System support.


Version 1.0.1:
- Changed: Quest Giver optional UI content is now handled differently in inspector.
- Added: QuestListContainer events, QuestListEvents component.
- Fixed: Setup issues in Quick Start scene.
- Fixed: When quests become offerable & active, giver updates indicator UIs properly now.
- Fixed: Indicator UI prefab - swapped ? and !.
- Fixed: Using joystick, close button didn't autofocus in dialogue with no quests.
- Added: DMMap support.
- Added: Love/Hate support.
- Added: PlayMaker support.
- Added: Rewired support.


Version 1.0:
- Initial release.
*/
